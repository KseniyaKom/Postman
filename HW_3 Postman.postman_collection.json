{
	"info": {
		"_postman_id": "94c269f6-8ca2-473c-abdd-e421aaeecf0e",
		"name": "HW_3 Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24563286"
	},
	"item": [
		{
			"name": "get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var HW_3_json = pm.response.json();\r",
							"var HW_3_token = HW_3_json.token\r",
							"pm.environment.set(\"auth_token\", HW_3_token);\r",
							"\r",
							"\r",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "KseniyaKom",
							"type": "text"
						},
						{
							"key": "password",
							"value": "2222",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"start_qa_salary\": {\"type\": \"number\"},\r",
							"        \"qa_salary_after_6_months\": {\"type\": \"number\"},\r",
							"        \"qa_salary_after_12_months\": {\"type\": \"number\"},\r",
							"        \"person\":{\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"u_name\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": [\r",
							"                        {\"type\": \"string\"},\r",
							"                        {\"type\": \"integer\"},\r",
							"                        {\"type\": \"integer\"}\r",
							"                    ]\r",
							"                    },\r",
							"                \"u_age\": {\"type\": \"number\"},\r",
							"                \"u_salary_1_5_year\": {\"type\": \"number\"}\r",
							"            },\r",
							"            \"additionalProperties\": false\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": false\r",
							"};\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"var reqBody = JSON.parse(pm.request.body);\r",
							"\r",
							"pm.test(\"Check that multiplying of qa salary after 6 m is correct\", \r",
							"function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(reqBody.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that multiplying of qa salary after 12 m is correct\", \r",
							"function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(reqBody.salary * 2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that multiplying of qa salary after 1.5 year is correct\", \r",
							"function () {\r",
							"    pm.expect(resp.person.u_salary_1_5_year).to.eql(reqBody.salary * 4);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var salary = jsonData.person.u_salary_1_5_year;\r",
							"console.log(salary); \r",
							"pm.environment.set(\"salary\", salary);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 32,\r\n    \"salary\": 2000,\r\n    \"name\": \"Kseniya\",\r\n    \"auth_token\": \"{{auth_token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kseniya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }  \r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"\"additionalProperties\": false\r",
							"}\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"var reqBody = pm.request.body;\r",
							"\r",
							"pm.test(\"Check qa salary x2\", \r",
							"function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql(reqBody.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa salary x3\", \r",
							"function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql(reqBody.salary * 3);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var salary = jsonData.salary;\r",
							"var secondElement = salary[1];\r",
							"var firstElement = salary[0];\r",
							"var thirdElement = salary[2];\r",
							"\r",
							"pm.test(\"Check salary element comparison\", function () {\r",
							"    pm.expect(Number(thirdElement)).to.be.above(firstElement);\r",
							"    pm.expect(Number(thirdElement)).to.be.above(Number(secondElement));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kseniya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"daily_food\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"daily_sleep\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"var resp_daily_food = resp.daily_food;\r",
							"var resp_daily_sleep = resp.daily_sleep;\r",
							"\r",
							"var req = request.data\r",
							"var req_weight = req.weight;\r",
							"\r",
							"\r",
							"pm.test(\"Check weight for daily food\", function () {\r",
							"    pm.expect(resp_daily_food).to.eql(req_weight * 0.012);\r",
							"});\r",
							"\r",
							"pm.test(\"Check weight for daily sleep\", function () {\r",
							"    pm.expect(resp_daily_sleep).to.eql(req_weight * 2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "59",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kseniya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"const schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"family\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", \"Kseniya\");\r",
							"var resp_name = resp.name;\r",
							"var resp_age = resp.age;\r",
							"\r",
							"pm.test(\"Name = Env name\", function () {\r",
							"    pm.expect(pm.environment.get(\"name\")).to.equal(resp_name);\r",
							"});\r",
							"let req = request.data\r",
							"let req_age = req.age;\r",
							"\r",
							"pm.test(\"Resp age = req age\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kseniya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var randomObj = resp[Math.floor(Math.random() * resp.length)];\r",
							"pm.environment.set(\"Cur_ID\", randomObj.Cur_ID);\r",
							"\r",
							"var curId = pm.environment.get(\"Cur_ID\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\"type\": \"string\"},\r",
							"    \"Cur_ID\": {\"type\": \"integer\"},\r",
							"    \"Cur_Name\": {\"type\": \"string\"},\r",
							"    \"Cur_OfficialRate\": {\"type\": \"number\"},\r",
							"    \"Cur_Scale\": {\"type\": \"integer\"},\r",
							"    \"Date\": {\"type\": \"string\"}\r",
							"    },\r",
							"    \"additionalProperties\": false\r",
							"}\r",
							"pm.test(\"json is valid\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"let respData = pm.response.json();\r",
							"let token = pm.environment.get('token');\r",
							"\r",
							"let cur_id = pm.environment.get(\"Cur_ID\");\r",
							"\r",
							"for (let i = 0; i < respData.length; i++) {\r",
							"    cur_id = respData[i].Cur_ID;\r",
							"    \r",
							"    const sendRequest = {\r",
							"        url: 'http://54.157.99.22:80/curr_byn',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"     },\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                { key: 'auth_token', value: token},\r",
							"                { key: 'curr_code', value: cur_id }\r",
							"        ]\r",
							"    }\r",
							"};\r",
							"pm.sendRequest(sendRequest, (err, response) => {\r",
							"    if (response.code === 200) {\r",
							"        let resp_data = response.json();\r",
							"        if (pm.expect(resp_data).to.have.property(\"Cur_OfficialRate\")) {\r",
							"            console.log(resp_data);\r",
							"            }\r",
							"        }      \r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "23",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}