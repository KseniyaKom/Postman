{
	"info": {
		"_postman_id": "b7553d53-4404-4fb1-b201-3373811acaac",
		"name": "HW_2 Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24563286"
	},
	"item": [
		{
			"name": "status code-correct string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"\r",
							"pm.test(\"Name in the response is equal to name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Kseniya\")\r",
							"});\r",
							"\r",
							"pm.test(\"Age in the response is equal to age\", function () {\r",
							"    pm.expect(resp.age).to.eql(\"32\")\r",
							"});\r",
							"\r",
							"pm.test(\"Salary in the response is equal to salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(2000)\r",
							"});\r",
							"\r",
							"var req = request.data;\r",
							"\r",
							"pm.test(\"Name in the response is equal to name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Kseniya\")\r",
							"});\r",
							"\r",
							"pm.test(\"Age in the response is equal to age\", function () {\r",
							"    pm.expect(resp.age).to.eql(\"32\")\r",
							"});\r",
							"\r",
							"pm.test(\"Salary in the response is equal to salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(2000)\r",
							"});\r",
							"\r",
							"console.log(resp.family);\r",
							"\r",
							"pm.test(\"U salary 1.5 year in the response is equal to salary *4\", function () {\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kseniya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var req = pm.request.url.query.toObject ();\r",
							"\r",
							"pm.test(\"Name in the response is equal to name request\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Age in the response is equal to age request\", function () {\r",
							"    pm.expect(resp.age).to.eql(req.age)\r",
							"});\r",
							"\r",
							"pm.test(\"Salary in the response is equal to salary request\", function () {\r",
							"    pm.expect(String(resp.salary)).to.eql(req.salary)\r",
							"});\r",
							"\r",
							"console.log(resp.family);\r",
							"\r",
							"pm.test(\"Check that the dog parameter has name parameter\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the dog parameter has age parameter\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the dog parameter name is equal to Luky\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the dog parameter age has value 4\", \r",
							"function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kseniya&age=32&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kseniya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var req = pm.request.url.query.toObject ();\r",
							"\r",
							"pm.test(\"Name in the response is equal to name request\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Age in the response is equal to age request\", function () {\r",
							"    pm.expect(resp.age).to.eql(Number(req.age))\r",
							"});\r",
							"\r",
							"console.log(req.salary);\r",
							"console.log(resp.salary);\r",
							"console.log(resp.salary[0]);\r",
							"console.log(resp.salary[1]);\r",
							"console.log(resp.salary[2]);\r",
							"\r",
							"pm.test(\"Check 0th element of salary is equal to req.salary\", function () {\r",
							"    pm.expect(resp.salary[0]).to.eql(Number(req.salary));\r",
							"});\r",
							"\r",
							"pm.test(\"Check 1st element of salary is equal to req.salary*2\", function () {\r",
							"    pm.expect(Number(resp.salary[1])).to.eql (req.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check 2nd element of salary is equal to req.salary*3\", function () {\r",
							"    pm.expect(Number(resp.salary[2])).to.eql(Number(req.salary * 3));\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var nameValue = jsonData.name\r",
							"pm.environment.set(\"name\", nameValue);\r",
							"\r",
							"var ageValue = jsonData.age;\r",
							"pm.environment.set(\"age\", ageValue);\r",
							"\r",
							"var salaryValue = jsonData.salary;\r",
							"pm.environment.set(\"salary\", salaryValue [0]);\r",
							"\r",
							"var salaryList = jsonData.salary;\r",
							"for (var i = 0; i < salaryList.length; i++) {\r",
							"    console.log(salaryList[i]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var resp = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Json response have parameter start_qa_salary\", function() {\r",
							"  pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"Json response have parameter qa_salary_after_6_months\", function() {\r",
							"  pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"Json response have parameter qa_salary_after_12_months\", function() {\r",
							"  pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"Json response have parameter qa_salary_after_1.5_year\", function() {\r",
							"  pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"Json response have parameter qa_salary_after_3.5_years\", function() {\r",
							"  pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"Json response have parameter person\", function() {\r",
							"  pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"pm.test(\"start_qa_salary is equal to salary request\", function () {\r",
							"    pm.expect(resp.salary).to.eql(req.salary)\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months is equal to req.salary*2\", function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql (req.salary * 2);\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months is equal to req.salary*2.7\", function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql (req.salary * 2.7);\r",
							"});\r",
							"pm.test(\"qa_salary_after_1.5_year is equal to req.salary*3.3\", function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql (req.salary * 3.3);\r",
							"});\r",
							"pm.test(\"qa_salary_after_3.5_years is equal to req.salary*3.8\", function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql (req.salary * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"person.u_name 1 = request salary\", function () {\r",
							"    var reqSalary = pm.environment.get(\"salary\");\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"person.u_age = request age\", function () {\r",
							"    var reqAge = pm.environment.get(\"age\");\r",
							"    pm.expect(resp.person.u_age).to.eql(reqAge);\r",
							"});\r",
							"pm.test(\"u_salary_5_years = request salary*4.2\", function () {\r",
							"    pm.expect(Number(resp.salary)).to.eql(req.salary * 4.2);\r",
							"});\r",
							"var personData = pm.response.json().person;\r",
							"var uNameList = personData.u_name;\r",
							"var uAge = personData.u_age;\r",
							"\r",
							"console.log(uAge);\r",
							"\r",
							"for (var i = 0; i < uNameList.length; i++) {\r",
							"    console.log(uNameList[i]);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}